#include 'protheus.ch'

namespace totvs.framework.starttech
#define __cTable "STARTTECH"

//-------------------------------------------------------------------
/*/{Protheus.doc} createSTTable
    Faz a criação da tabela via user function

@author  vanessa.ruama
@since   27/11/2024
@version 1.0
/*/
//-------------------------------------------------------------------
user Function createSTTable() as logical
    RpcSetEnv('T1', 'D MG 01', "admin", "1234")
    createTable() 
return

//-------------------------------------------------------------------
/*/{Protheus.doc} createTable
    Função que verifica a criação da tabela STARTTECH

@author  vanessa.ruama
@since   27/11/2024
@version 1.0
/*/
//-------------------------------------------------------------------
Function createTable() as logical
    if !FWTCCanOpen(__cTable)
        FwOpenSTTable()
    endif
return

//-------------------------------------------------------------------
/*/{Protheus.doc} FwOpenSTTable
    Função que realiza a abertura da tabela STARTTECH

@author vanessa.ruama
@since 27/11/2024
@version 1.0
/*/
//-------------------------------------------------------------------
Function FwOpenSTTable()
	Local aTopInfo      as array
	Local oTblTRep      as object
	Local oTblDDL       as object 

	oTblTRep := FWSTTableStruct()

	oTblDDL := FWTableDDL():New()

    aTopInfo := FWGetTopInfo()
    oTblDDL:AddDbAcess( aTopInfo[1], aTopInfo[2], aTopInfo[3], ;
                        aTopInfo[4], aTopInfo[5], aTopInfo[6], AdvConnection() )

	oTblDDL:SetTableStruct(oTblTRep)
	oTblDDL:Activate()

	If !oTblDDL:TblExists()
		oTblDDL:CreateTable(,,.T.)

        Conout("======================")
        Conout("Tabela STARTECH criada")
        Conout("======================")
	ElseIf FwDDLCanAlter()
		oTblDDL:AlterTable()
        Conout("======================")
        Conout("Alteração feita")
        Conout("======================")
	EndIf
	
	oTblDDL:deActivate()
	FWFreeVar(@oTblDDL)

Return

//-----------------------------------------------------------------------------
/*/{Protheus.doc} FWSTTableStruct
    Função que retorna a estrutura da tabela STARTTECH

@return oTblStruct objeto contendo a estrutura da tabela STARTTECH

@author vanessa.ruama
@since 27/11/2024
@version 1.0
/*/
//-----------------------------------------------------------------------------
Function FWSTTableStruct()
    Local nX            as numeric
    Local oTblStruct    as object
    Local aStruct       as array

    aStruct 	:= FWSTCtlFields()
              
	oTblStruct	:= FWTableStruct():New(__cTable,__cTable,"TOPCONN")

	For nX := 1 To Len( aStruct )
		oTblStruct:AddField( aStruct[nX][1], aStruct[nX][2], aStruct[nX][3], aStruct[nX][4] )
	Next nX

	oTblStruct:SetPrimaryKey({"ST__ID", "ST__CLASS"})
	oTblStruct:AddIndex("01",{"ST__ID", "ST__CLASS","ST__NAME"})
	oTblStruct:AddIndex("02",{"ST__ID", "ST__CLASS","ST__AGE"})
	oTblStruct:AddIndex("03",{"ST__ID", "ST__CLASS","ST__HOBBIE"})
	oTblStruct:AddIndex("04",{"ST__ID", "ST__CLASS","ST__NAME","ST__AGE","ST__HOBBIE"})
	oTblStruct:Activate()

Return oTblStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} FWSTCtlFields
    Retorna os campos da Tabela StartTech

@return aFields Array contendo os campos da tabela do 
controlador do TReports

@author vanessa.ruama
@since 27/11/2024
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function FWSTCtlFields()
    Local aFields as array

    aFields := {}

	aAdd(aFields,{"ST__ID"   	,"C",150,0})
    aAdd(aFields,{"ST__CLASS"   ,"C",150,0})
    aAdd(aFields,{"ST__NAME"    ,"C",150,0}) 
    aAdd(aFields,{"ST__AGE"     ,"N",002,0})
    aAdd(aFields,{"ST__HOBBIE"  ,"C",150,0})
Return aFields
